#!/usr/bin/env bash

# Exit script on any errors
set -e

usage() {
  cat << EOF
Usage: $(basename $0) [-h]
This idempotent macOS Bash script uses Homebrew to install rbenv Ruby Version Manager

OPTIONS:
  -h  display help
EOF
}

while getopts 'h' opt; do
  case "$opt" in
    ?|h)
    usage
    exit
      ;;
  esac
done
shift "$(($OPTIND -1))"

# -- MAIN --
echo "Installing rbenv and adding to ~/.zshrc:"

# Homebrew is required
brew help > /dev/null || \
  (echo "FAIL [1] - Homebrew must be installed first" ; exit 1)

# Install rbenv (or not)
brew list rbenv > /dev/null || \
  brew install rbenv

user_home_directory=$(echo ~)
zshrc_file="${user_home_directory}/.zshrc"
[[ -f "${zshrc_file}" ]] && echo "${zshrc_file} exists"

# Modify .zshrc to add RUBY_CONFIGURE_OPTS with brew ssl
if ! grep 'RUBY_CONFIGURE_OPTS' "${zshrc_file}" > /dev/null ; then
  echo "Adding RUBY_CONFIGURE_OPTS comment to ${zshrc_file}..."
  # Single quotes to prevent evaluation of $(brew ...)
  cat << 'EOF' >> ${zshrc_file}

# To install older (pre 3.1) versions of Ruby with rbenv, uncomment the following...
#export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
EOF
fi

# Modify .zshrc to add rbenv initialization
if ! grep 'eval "$(rbenv init' "${zshrc_file}" > /dev/null ; then
  echo "Adding rbenv init to ${zshrc_file}..."
  # Single quotes to prevent evaluation of eval
  cat << 'EOF' >> ${zshrc_file}

# Load rbenv Ruby version manager
eval "$(rbenv init - zsh)"
EOF
fi
